security:   
    # achage des mots de passe
    encoders:
          App\Entity\User:
            algorithm: bcrypt
        
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: NULL}
        our_db_provider:
           entity:
               class: App\Entity\User
            #expliquer quelle est la propiété qui va recherche l'utilisateur en question       
                property: email
    
    firewalls:
         dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
         main:
            anonymous: true

            provider: our_db_provider
            # mode d'identification se fera par un formulaire de login
             
            form_login: 
                login_path: security_login
               # endroit que je dois appeller pour verifier les informations d'un formulaire de login
                check_path: security_login      
            # deconnexion
            logout:
                path: security_logout
                target: blog
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
